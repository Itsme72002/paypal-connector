/**
 * Copyright (c) MuleSoft, Inc. All rights reserved. http://www.mulesoft.com
 *
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.md file.
 */


/*
 * 
 */

package ebay.api.paypalapi;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.3.0
 * Fri Oct 28 15:24:09 ART 2011
 * Generated source version: 2.3.0
 * 
 */


@WebServiceClient(name = "PayPalAPIInterfaceService", 
                  wsdlLocation = "file:/home/franco/mule/paypal/src/main/wsdl/PayPalSvc.wsdl",
                  targetNamespace = "urn:ebay:api:PayPalAPI") 
public class PayPalAPIInterfaceService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("urn:ebay:api:PayPalAPI", "PayPalAPIInterfaceService");
    public final static QName PayPalAPI = new QName("urn:ebay:api:PayPalAPI", "PayPalAPI");
    public final static QName PayPalAPIAA = new QName("urn:ebay:api:PayPalAPI", "PayPalAPIAA");
    static {
        URL url = null;
        try {
            url = new URL("file:/home/franco/mule/paypal/src/main/wsdl/PayPalSvc.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/home/franco/mule/paypal/src/main/wsdl/PayPalSvc.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public PayPalAPIInterfaceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public PayPalAPIInterfaceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PayPalAPIInterfaceService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     * 
     * @return
     *     returns PayPalAPIInterface
     */
    @WebEndpoint(name = "PayPalAPI")
    public PayPalAPIInterface getPayPalAPI() {
        return super.getPort(PayPalAPI, PayPalAPIInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PayPalAPIInterface
     */
    @WebEndpoint(name = "PayPalAPI")
    public PayPalAPIInterface getPayPalAPI(WebServiceFeature... features) {
        return super.getPort(PayPalAPI, PayPalAPIInterface.class, features);
    }
    /**
     * 
     * @return
     *     returns PayPalAPIAAInterface
     */
    @WebEndpoint(name = "PayPalAPIAA")
    public PayPalAPIAAInterface getPayPalAPIAA() {
        return super.getPort(PayPalAPIAA, PayPalAPIAAInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PayPalAPIAAInterface
     */
    @WebEndpoint(name = "PayPalAPIAA")
    public PayPalAPIAAInterface getPayPalAPIAA(WebServiceFeature... features) {
        return super.getPort(PayPalAPIAA, PayPalAPIAAInterface.class, features);
    }

}
